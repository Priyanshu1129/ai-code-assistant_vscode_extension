{
  "version": 3,
  "sources": ["../node_modules/tree-kill/index.js", "../extension.js"],
  "sourcesContent": ["'use strict';\n\nvar childProcess = require('child_process');\nvar spawn = childProcess.spawn;\nvar exec = childProcess.exec;\n\nmodule.exports = function (pid, signal, callback) {\n    if (typeof signal === 'function' && callback === undefined) {\n        callback = signal;\n        signal = undefined;\n    }\n\n    pid = parseInt(pid);\n    if (Number.isNaN(pid)) {\n        if (callback) {\n            return callback(new Error(\"pid must be a number\"));\n        } else {\n            throw new Error(\"pid must be a number\");\n        }\n    }\n\n    var tree = {};\n    var pidsToProcess = {};\n    tree[pid] = [];\n    pidsToProcess[pid] = 1;\n\n    switch (process.platform) {\n    case 'win32':\n        exec('taskkill /pid ' + pid + ' /T /F', callback);\n        break;\n    case 'darwin':\n        buildProcessTree(pid, tree, pidsToProcess, function (parentPid) {\n          return spawn('pgrep', ['-P', parentPid]);\n        }, function () {\n            killAll(tree, signal, callback);\n        });\n        break;\n    // case 'sunos':\n    //     buildProcessTreeSunOS(pid, tree, pidsToProcess, function () {\n    //         killAll(tree, signal, callback);\n    //     });\n    //     break;\n    default: // Linux\n        buildProcessTree(pid, tree, pidsToProcess, function (parentPid) {\n          return spawn('ps', ['-o', 'pid', '--no-headers', '--ppid', parentPid]);\n        }, function () {\n            killAll(tree, signal, callback);\n        });\n        break;\n    }\n};\n\nfunction killAll (tree, signal, callback) {\n    var killed = {};\n    try {\n        Object.keys(tree).forEach(function (pid) {\n            tree[pid].forEach(function (pidpid) {\n                if (!killed[pidpid]) {\n                    killPid(pidpid, signal);\n                    killed[pidpid] = 1;\n                }\n            });\n            if (!killed[pid]) {\n                killPid(pid, signal);\n                killed[pid] = 1;\n            }\n        });\n    } catch (err) {\n        if (callback) {\n            return callback(err);\n        } else {\n            throw err;\n        }\n    }\n    if (callback) {\n        return callback();\n    }\n}\n\nfunction killPid(pid, signal) {\n    try {\n        process.kill(parseInt(pid, 10), signal);\n    }\n    catch (err) {\n        if (err.code !== 'ESRCH') throw err;\n    }\n}\n\nfunction buildProcessTree (parentPid, tree, pidsToProcess, spawnChildProcessesList, cb) {\n    var ps = spawnChildProcessesList(parentPid);\n    var allData = '';\n    ps.stdout.on('data', function (data) {\n        var data = data.toString('ascii');\n        allData += data;\n    });\n\n    var onClose = function (code) {\n        delete pidsToProcess[parentPid];\n\n        if (code != 0) {\n            // no more parent processes\n            if (Object.keys(pidsToProcess).length == 0) {\n                cb();\n            }\n            return;\n        }\n\n        allData.match(/\\d+/g).forEach(function (pid) {\n          pid = parseInt(pid, 10);\n          tree[parentPid].push(pid);\n          tree[pid] = [];\n          pidsToProcess[pid] = 1;\n          buildProcessTree(pid, tree, pidsToProcess, spawnChildProcessesList, cb);\n        });\n    };\n\n    ps.on('close', onClose);\n}\n", "const vscode = require(\"vscode\");\r\nconst cp = require(\"child_process\");\r\nconst path = require(\"path\");\r\nconst fs = require(\"fs\");\r\nconst treeKill = require(\"tree-kill\");\r\n\r\nlet outputChannel;\r\nlet serverProcess;\r\nlet backendPort = null;\r\nlet portReady; // Promise that resolves once we know the port\r\n\r\n/**\r\n * Starts (or restarts) the Python backend + watcher for the given workspace folder.\r\n */\r\nfunction startBackend(workspacePath, context) {\r\n  // \u2014 kill old process if any\r\n  if (serverProcess && serverProcess.pid) {\r\n    outputChannel.appendLine(`\uD83D\uDED1 Killing backend PID ${serverProcess.pid}\u2026`);\r\n    treeKill(serverProcess.pid, \"SIGKILL\", (err) => {\r\n      if (err) outputChannel.appendLine(`\u274C Failed to kill: ${err}`);\r\n      else outputChannel.appendLine(`\u2705 Killed ${serverProcess.pid}`);\r\n    });\r\n  }\r\n\r\n  // resolve our Python and working dir\r\n  const backendDir = path.join(context.extensionPath, \"backend\");\r\n  const winPy = path.join(backendDir, \"venv\", \"Scripts\", \"python.exe\");\r\n  const nixPy = path.join(backendDir, \"venv\", \"bin\", \"python\");\r\n  const pythonExe = fs.existsSync(winPy)\r\n    ? winPy\r\n    : fs.existsSync(nixPy)\r\n    ? nixPy\r\n    : \"python\";\r\n\r\n  outputChannel.appendLine(`\uD83D\uDC0D Using Python: ${pythonExe}`);\r\n  outputChannel.appendLine(`\uD83D\uDE80 Starting backend for: ${workspacePath}`);\r\n\r\n  // \u2460 Spawn the new process **first**\r\n  const hfKey = vscode.workspace\r\n    .getConfiguration(\"aiDevAssistant\")\r\n    .get(\"hfApiKey\");\r\n\r\n  if (!hfKey) {\r\n    vscode.window.showErrorMessage(\r\n      \"AI Dev Assistant: please set aiDevAssistant.hfApiKey in your settings.\"\r\n    );\r\n    return;\r\n  }\r\n\r\n  serverProcess = cp.spawn(pythonExe, [\"main.py\"], {\r\n    cwd: backendDir,\r\n    env: {\r\n      ...process.env,\r\n      WORKSPACE_PATH: workspacePath,\r\n      HF_API_KEY: hfKey,\r\n      PYTHONIOENCODING: \"utf-8\",\r\n      PYTHONUNBUFFERED: \"1\",\r\n    },\r\n    shell: false,\r\n  });\r\n\r\n  // \u2461 Reset port & set up the promise to await the PORT:: line\r\n  backendPort = null;\r\n  portReady = new Promise((resolve) => {\r\n    const onData = (chunk) => {\r\n      const text = chunk.toString();\r\n      outputChannel.appendLine(`[Backend] ${text.trim()}`);\r\n      for (let line of text.split(/\\r?\\n/)) {\r\n        line = line.trim();\r\n        if (line.startsWith(\"PORT::\")) {\r\n          backendPort = line.slice(\"PORT::\".length).trim();\r\n          outputChannel.appendLine(\r\n            `\u2705 Backend listening on port ${backendPort}`\r\n          );\r\n          serverProcess.stdout.off(\"data\", onData);\r\n          resolve(backendPort);\r\n          return;\r\n        }\r\n      }\r\n    };\r\n\r\n    // attach listener to the freshly-spawned process\r\n    serverProcess.stdout.on(\"data\", onData);\r\n  });\r\n\r\n  // stderr & exit handlers\r\n  serverProcess.stderr.on(\"data\", (d) =>\r\n    outputChannel.appendLine(`[Backend ERROR] ${d.toString().trim()}`)\r\n  );\r\n  serverProcess.on(\"exit\", (code) => {\r\n    outputChannel.appendLine(`\u26A0\uFE0F Backend exited with code ${code}`);\r\n    backendPort = null;\r\n  });\r\n}\r\n\r\nfunction activate(context) {\r\n  // Create & show log channel\r\n  outputChannel = vscode.window.createOutputChannel(\"AI Assistant Logs\");\r\n  context.subscriptions.push(outputChannel);\r\n  outputChannel.show(true);\r\n  outputChannel.appendLine(\"\uD83D\uDE80 Activating AI Code Assistant\u2026\");\r\n\r\n  // Launch backend for the initial workspace\r\n  const initialWF = vscode.workspace.workspaceFolders?.[0]?.uri.fsPath;\r\n  if (initialWF) {\r\n    outputChannel.appendLine(`\uD83D\uDCC2 Initial workspace: ${initialWF}`);\r\n    startBackend(initialWF, context);\r\n  } else {\r\n    outputChannel.appendLine(\"\u26A0\uFE0F No folder open \u2014 backend not started\");\r\n  }\r\n\r\n  // Restart backend on workspace switches\r\n  context.subscriptions.push(\r\n    vscode.workspace.onDidChangeWorkspaceFolders(() => {\r\n      const next = vscode.workspace.workspaceFolders?.[0]?.uri.fsPath;\r\n      if (next) {\r\n        outputChannel.appendLine(`\uD83D\uDD04 Workspace changed \u2014 now: ${next}`);\r\n        startBackend(next, context);\r\n      }\r\n    })\r\n  );\r\n\r\n  // Register the \u201CAsk AI Assistant\u201D command\r\n  context.subscriptions.push(\r\n    vscode.commands.registerCommand(\r\n      \"ai-dev-assistant.askQuestion\",\r\n      async () => {\r\n        // Wait for the port to become available (or timeout)\r\n        const port = await Promise.race([\r\n          portReady,\r\n          new Promise((_, rej) => setTimeout(() => rej(\"timeout\"), 10_000)),\r\n        ]).catch((e) => {\r\n          vscode.window.showErrorMessage(\"\u274C Backend didn\u2019t start in time\");\r\n          return null;\r\n        });\r\n        if (!port) return;\r\n\r\n        const panel = vscode.window.createWebviewPanel(\r\n          \"aiDevAssistant\",\r\n          \"AI Assistant Chat\",\r\n          vscode.ViewColumn.One,\r\n          { enableScripts: true }\r\n        );\r\n        panel.webview.html = getWebviewContent();\r\n        panel.webview.onDidReceiveMessage(async (msg) => {\r\n          if (msg.command === \"ask\") {\r\n            try {\r\n              outputChannel.appendLine(\r\n                `\uD83D\uDCDD querying http://localhost:${port}/query`\r\n              );\r\n              const res = await fetch(`http://localhost:${port}/query`, {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ question: msg.text }),\r\n              });\r\n              const data = await res.json();\r\n              panel.webview.postMessage({\r\n                command: \"response\",\r\n                text: data.answer,\r\n              });\r\n            } catch (err) {\r\n              panel.webview.postMessage({\r\n                command: \"response\",\r\n                text: `\u274C ${err}`,\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    )\r\n  );\r\n\r\n  // Optional: Show Logs command\r\n  context.subscriptions.push(\r\n    vscode.commands.registerCommand(\"ai-dev-assistant.showLogs\", () => {\r\n      outputChannel.show(true);\r\n    })\r\n  );\r\n}\r\n\r\nfunction deactivate() {\r\n  if (serverProcess && serverProcess.pid) {\r\n    treeKill(serverProcess.pid, \"SIGKILL\", (err) => {\r\n      outputChannel.appendLine(\r\n        err\r\n          ? `\u274C Failed to kill backend: ${err}`\r\n          : `\u2705 Killed backend PID ${serverProcess.pid}`\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nfunction getWebviewContent() {\r\n  return `\r\n  <!DOCTYPE html>\r\n  <html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\">\r\n    <style>\r\n      * {\r\n        box-sizing: border-box;\r\n        margin: 0;\r\n        padding: 0;\r\n      }\r\n\r\n      body {\r\n        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n        height: 100vh;\r\n        display: flex;\r\n        flex-direction: column;\r\n        background: #0f172a;\r\n        color: #f1f5f9;\r\n        overflow: hidden;\r\n      }\r\n\r\n      .header {\r\n        padding: 16px;\r\n        background: linear-gradient(90deg, #0f172a 0%, #1e293b 100%);\r\n        border-bottom: 1px solid #1e293b;\r\n        text-align: center;\r\n        position: relative;\r\n      }\r\n\r\n      .header h2 {\r\n        font-size: 18px;\r\n        font-weight: 600;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        gap: 10px;\r\n      }\r\n\r\n      .header-icon {\r\n        color: #60a5fa;\r\n      }\r\n\r\n      #chat-container {\r\n        flex: 1;\r\n        overflow-y: auto;\r\n        padding: 16px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        background: linear-gradient(180deg, #0f172a 0%, #0d1528 100%);\r\n      }\r\n\r\n      .welcome-message {\r\n        margin: auto;\r\n        text-align: center;\r\n        max-width: 80%;\r\n        opacity: 0.8;\r\n        animation: fadeIn 0.8s ease-out;\r\n      }\r\n\r\n      .welcome-message h3 {\r\n        font-size: 24px;\r\n        margin-bottom: 16px;\r\n        color: #e2e8f0;\r\n        font-weight: 500;\r\n      }\r\n\r\n      .welcome-message p {\r\n        font-size: 15px;\r\n        color: #94a3b8;\r\n        line-height: 1.6;\r\n      }\r\n\r\n      .welcome-icon {\r\n        font-size: 48px;\r\n        margin-bottom: 20px;\r\n        color: #60a5fa;\r\n      }\r\n\r\n      .message {\r\n        margin: 12px 0;\r\n        padding: 14px 18px;\r\n        border-radius: 14px;\r\n        max-width: 85%;\r\n        line-height: 1.5;\r\n        white-space: pre-wrap;\r\n        word-wrap: break-word;\r\n        position: relative;\r\n        animation: fadeIn 0.3s ease-out;\r\n        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n      }\r\n\r\n      .user {\r\n        background: linear-gradient(135deg, #2563eb 0%, #3b82f6 100%);\r\n        color: white;\r\n        margin-left: auto;\r\n        border-bottom-right-radius: 4px;\r\n      }\r\n\r\n      .bot {\r\n        background: linear-gradient(135deg, #1e293b 0%, #334155 100%);\r\n        color: #e2e8f0;\r\n        margin-right: auto;\r\n        border-bottom-left-radius: 4px;\r\n        border: 1px solid #334155;\r\n      }\r\n\r\n      .message-icon {\r\n        position: absolute;\r\n        bottom: 8px;\r\n        font-size: 14px;\r\n        opacity: 0.7;\r\n      }\r\n\r\n      .user .message-icon {\r\n        right: 12px;\r\n      }\r\n\r\n      .bot .message-icon {\r\n        left: 12px;\r\n      }\r\n\r\n      #input-container {\r\n        display: flex;\r\n        padding: 14px;\r\n        border-top: 1px solid #1e293b;\r\n        background: #0f172a;\r\n        align-items: center;\r\n      }\r\n\r\n      #input {\r\n        flex: 1;\r\n        padding: 14px 18px;\r\n        border-radius: 12px;\r\n        border: 1px solid #334155;\r\n        background: #1e293b;\r\n        color: #f1f5f9;\r\n        font-size: 15px;\r\n        outline: none;\r\n        transition: border-color 0.3s;\r\n      }\r\n\r\n      #input:focus {\r\n        border-color: #60a5fa;\r\n        box-shadow: 0 0 0 2px rgba(96, 165, 250, 0.2);\r\n      }\r\n\r\n      #input::placeholder {\r\n        color: #64748b;\r\n      }\r\n\r\n      #send {\r\n        margin-left: 12px;\r\n        border: none;\r\n        border-radius: 12px;\r\n        background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);\r\n        color: white;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n        transition: all 0.2s;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 46px;\r\n        height: 46px;\r\n        padding: 0;\r\n      }\r\n\r\n      #send:hover {\r\n        background: linear-gradient(135deg, #60a5fa 0%, #3b82f6 100%);\r\n        transform: translateY(-1px);\r\n      }\r\n\r\n      #send:active {\r\n        transform: translateY(0);\r\n      }\r\n\r\n      .send-icon {\r\n        width: 20px;\r\n        height: 20px;\r\n        fill: white;\r\n      }\r\n\r\n      .loading-dots {\r\n        display: flex;\r\n        padding: 16px 0;\r\n      }\r\n\r\n      .loading-dots .dot {\r\n        width: 10px;\r\n        height: 10px;\r\n        background-color: #94a3b8;\r\n        border-radius: 50%;\r\n        margin: 0 4px;\r\n        animation: bounce 1.5s infinite ease-in-out;\r\n      }\r\n\r\n      .loading-dots .dot:nth-child(1) { animation-delay: 0s; }\r\n      .loading-dots .dot:nth-child(2) { animation-delay: 0.2s; }\r\n      .loading-dots .dot:nth-child(3) { animation-delay: 0.4s; }\r\n\r\n      @keyframes bounce {\r\n        0%, 100% { transform: translateY(0); }\r\n        50% { transform: translateY(-8px); }\r\n      }\r\n\r\n      @keyframes fadeIn {\r\n        from { opacity: 0; transform: translateY(10px); }\r\n        to { opacity: 1; transform: translateY(0); }\r\n      }\r\n\r\n      /* Scrollbar styling */\r\n      #chat-container::-webkit-scrollbar {\r\n        width: 8px;\r\n      }\r\n\r\n      #chat-container::-webkit-scrollbar-track {\r\n        background: #0d1528;\r\n      }\r\n\r\n      #chat-container::-webkit-scrollbar-thumb {\r\n        background: #334155;\r\n        border-radius: 4px;\r\n      }\r\n    </style>\r\n  </head>\r\n  <body>\r\n    <div class=\"header\">\r\n      <h2><span class=\"header-icon\">\u26A1</span> AI Development Assistant</h2>\r\n    </div>\r\n    \r\n    <div id=\"chat-container\">\r\n      <div class=\"welcome-message\">\r\n        <div class=\"welcome-icon\">\uD83D\uDCAC</div>\r\n        <h3>How can I assist you today?</h3>\r\n        <p>Ask questions about your code, project structure, or debugging issues.<br>I'm here to help you with your development tasks!</p>\r\n      </div>\r\n    </div>\r\n    \r\n    <div id=\"input-container\">\r\n      <input type=\"text\" id=\"input\" placeholder=\"Ask about your code or project...\" />\r\n      <button id=\"send\">\r\n        <svg class=\"send-icon\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path d=\"M22 2L11 13\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n          <path d=\"M22 2L15 22L11 13L2 9L22 2Z\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n        </svg>\r\n      </button>\r\n    </div>\r\n\r\n    <script>\r\n      const vscode = acquireVsCodeApi();\r\n      const chatContainer = document.getElementById('chat-container');\r\n      const input = document.getElementById('input');\r\n      const send = document.getElementById('send');\r\n      let loadingDiv = null;\r\n\r\n      function appendMessage(text, sender) {\r\n        const messageDiv = document.createElement('div');\r\n        messageDiv.className = 'message ' + sender;\r\n        \r\n        const messageContent = document.createElement('div');\r\n        messageContent.textContent = (sender === 'user' ? \"\uD83E\uDDD1\u200D\uD83D\uDCBB \" : \"\uD83E\uDD16 \") + text;\r\n        messageDiv.appendChild(messageContent);\r\n        \r\n        const iconSpan = document.createElement('span');\r\n        iconSpan.className = 'message-icon';\r\n        iconSpan.textContent = sender === 'user' ? 'You' : 'Assistant';\r\n        messageDiv.appendChild(iconSpan);\r\n        \r\n        chatContainer.appendChild(messageDiv);\r\n        chatContainer.scrollTop = chatContainer.scrollHeight;\r\n        return messageDiv;\r\n      }\r\n\r\n      function showLoading() {\r\n        const loadingContainer = document.createElement('div');\r\n        loadingContainer.className = 'loading-dots';\r\n        \r\n        for (let i = 0; i < 3; i++) {\r\n          const dot = document.createElement('div');\r\n          dot.className = 'dot';\r\n          loadingContainer.appendChild(dot);\r\n        }\r\n        \r\n        chatContainer.appendChild(loadingContainer);\r\n        chatContainer.scrollTop = chatContainer.scrollHeight;\r\n        return loadingContainer;\r\n      }\r\n\r\n      function removeWelcome() {\r\n        const welcome = document.querySelector('.welcome-message');\r\n        if (welcome) {\r\n          welcome.style.display = 'none';\r\n        }\r\n      }\r\n\r\n      send.addEventListener('click', sendMessage);\r\n      input.addEventListener('keydown', (e) => {\r\n        if (e.key === 'Enter') {\r\n          e.preventDefault();\r\n          sendMessage();\r\n        }\r\n      });\r\n\r\n      function sendMessage() {\r\n        const text = input.value.trim();\r\n        if (!text) return;\r\n        \r\n        removeWelcome();\r\n        appendMessage(text, 'user');\r\n        loadingDiv = showLoading();\r\n        \r\n        vscode.postMessage({ command: 'ask', text });\r\n        input.value = '';\r\n      }\r\n\r\n      window.addEventListener('message', event => {\r\n        const message = event.data;\r\n        if (message.command === 'response') {\r\n          if (loadingDiv && loadingDiv.parentNode) {\r\n            loadingDiv.parentNode.removeChild(loadingDiv);\r\n          }\r\n          appendMessage(message.text, 'bot');\r\n        }\r\n      });\r\n    </script>\r\n  </body>\r\n  </html>\r\n  `;\r\n}\r\n\r\nmodule.exports = { activate, deactivate };\r\n"],
  "mappings": "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",
  "names": ["exports", "module"]
}
